bkshr_split = initial_time_split(model_data, prop = .8)
bkshr_train = training(bkshr_split)
model_rec = recipe(trips~., data = model_data) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_normalize(all_numeric(), -all_outcomes(), -contains("date")) %>%
step_corr(all_numeric(), -all_outcomes()) %>%
step_dummy(all_nominal()) %>%
step_nzv(all_predictors())
mdl_mars = mars(
prod_degree = 1,
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
model_data
model_data = bkshr %>%
dplyr::mutate(dplyr::across(trips, fns_lag, .names = names_glue_lag),
dplyr::across(trips_lag_1 , fns_rll, .names = names_glue_rll)) %>%
select(date, starts_with("trips"), everything()) %>%
na.omit()
bkshr_split = initial_time_split(model_data, prop = .8)
bkshr_train = training(bkshr_split)
folds = rsample::rolling_origin(bkshr_train, initial = 100)
folds
folds$splits[[1]] %>%
analysis()
folds = rsample::rolling_origin(bkshr_train, initial = 100)
model_rec = recipe(trips~., data = model_data) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_normalize(all_numeric(), -all_outcomes(), -contains("date")) %>%
step_corr(all_numeric(), -all_outcomes()) %>%
step_dummy(all_nominal()) %>%
step_nzv(all_predictors())
mdl_mars = mars(
prod_degree = 1,
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
doParallel::registerDoParallel()
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
toc()
```{r}
doParallel::registerDoParallel()
print("hi")
toc()
tictoc::
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
```{r}
doParallel::registerDoParallel()
print("hi")
toc()
tictoc::
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
print("hi")
doParallel::registerDoParallel()
tictoc::tic()
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
tictoc::tic()
tictoc::toc()
mars_train
mars_train %>%  collect_metrics()
mars_train %>%
collect_predictions()
mars_train %>%
collect_predictions() %>%
ggplot(aes(trips, .pred)) +
geom_line()
mars_train %>%
collect_predictions() %>%
ggplot(aes(trips, .pred)) +
geom_point()
mars_train %>%
collect_predictions() %>%
ggplot(aes(trips, .pred))
mars_train %>%
collect_predictions() %>%
pivot_longer(cols = c(.pred, trips))
mars_train %>%
collect_predictions() %>%
pivot_longer(cols = c(.pred, trips)) %>%
ggplot(aes(.row, value, name)) +
geom_point() +
geom_line()
mars_train %>%
collect_predictions() %>%
pivot_longer(cols = c(.pred, trips)) %>%
ggplot(aes(.row, value, color = name)) +
geom_point() +
geom_line()
yolo = mars_train %>%
collect_predictions() %>%
pivot_longer(cols = c(.pred, trips)) %>%
ggplot(aes(.row, value, color = name)) +
geom_point() +
geom_line()
plotly::ggplotly(yolo)
doParallel::registerDoParallel()
tictoc::tic()
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE)
)
tictoc::toc()
mars_train
mars_train
mars_train %>%
show_best(metric = "rmse")
mars_train$.extracts
mars_train %>%  str()
mars_train[[796]]
mars_train[796,5]
mars_train[796,]
tictoc::tic()
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE, extract = get_model)
)
tictoc::toc()
control_resamples(save_pred = TRUE, extract = get_model)
get_model <- function(x) {
pull_workflow_fit(x) %>% tidy()
}
tictoc::tic()
mars_train = mars_wrkfl %>%
fit_resamples(
resamples = folds,
control = control_resamples(save_pred = TRUE, extract = get_model)
)
tictoc::toc()
mars_train
mars_train$.extracts
mars_train$.extracts[[1]]
mars_train$.extracts[[1]][[1]]
mars_train$.extracts
mars_train$.extracts [[1]]
mars_train$.extracts[[550]]
mars_train$.extracts[[550]][".extracts"]
mars_train$.extracts[[550]][".extracts"] %>%
unnest()
mars_wrkfl %>%
fit(bkshr_train)
mars_fit = mars_wrkfl %>%
fit(bkshr_train)
mars_fit
mars_fit$fit
bkshr_test = testing(bkshr_split)
mars_fit %>%
predict(bkshr_test)
bkshr_test
mars_fit %>%
predict(bkshr_test)
bkshr_test %>%
mutate(mars_fit %>%
predict(bkshr_test))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
names()
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred)) %>%
ggplot() +
geom_point((aes(date, value, color = name)))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred)) %>%
ggplot() +
geom_line((aes(date, value, color = name)))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred)) %>%
ggplot(aes(date, value, color = name)) +
geom_line() +
geom_point()
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
rmse()
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
rmse(truth = trips, estimate = .pred)
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred)) %>%
ggplot(aes(date, value, color = name)) +
geom_line() +
geom_point()
yolo = bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
pivot_longer(cols = c(trips, .pred)) %>%
ggplot(aes(date, value, color = name)) +
geom_line() +
geom_point()
plotly::ggplotly(yolo)
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
mutate(error = trips-.pred)
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
mutate(error = trips-.pred) %>%
ggplot() +
geom_point((date, error))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
mutate(error = trips-.pred) %>%
ggplot() +
geom_point(aes(date, error))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
mutate(error = trips-.pred) %>%
ggplot() +
geom_histogram(aes(error))
bkshr_test %>%
bind_cols(mars_fit %>%
predict(bkshr_test)) %>%
mutate(error = trips-.pred) %>%
ggplot() +
geom_histogram(aes(error), bins = 60)
mdl_mars = mars(
prod_degree = tune(),
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mdl_mars = mars(
prod_degree = tune(),
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mdl_mars = mars(
prod_degree = tune(),
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mars_wrkfl %>%  parameters()
mars_wrkfl %>%
parameters()
mars_wrkfl %>%
parameters() %>%
prod_degree()
mars_wrkfl %>%
parameters()
mars_wrkfl %>%
parameters() %>%
prod_degree()
prod_degree()
mars_wrkfl %>%
parameters() %>%
pull_dials_object("prod_degree")
mdl_mars = mars(
prod_degree = tune(),
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mdl_mars
mdl_mars = mars(
num_terms = tune()
prod_degree = tune(),
mdl_mars = mars(
num_terms = tune(),
prod_degree = tune(),
prune_method = "backward"
) %>%
set_engine("earth") %>%
set_mode("regression") %>%
translate()
mdl_mars
mars_wrkfl = workflow() %>%
add_recipe(model_rec) %>%
add_model(mdl_mars)
mars_wrkfl %>%
parameters()
mars_wrkfl %>%
parameters() %>%
pull_dials_object("num_terms")
mars_fit
mars_fit %>%  str()
mars_fit %>%  tidy()
mars_fit %>%  broom()
mars_fit %>%  show_model_info()
mars_fit
tictoc::tic()
# mars_train = mars_wrkfl %>%
#   fit_resamples(
#     resamples = folds,
#     control = control_resamples(save_pred = TRUE, extract = get_model)
#   )
mars_tune = mars_wrkfl %>%
tune_grid(
resamples = folds,
control = control_resamples(save_pred = TRUE, extract = get_model)
)
print("yolo")
doParallel::registerDoParallel()
tictoc::tic()
# mars_train = mars_wrkfl %>%
#   fit_resamples(
#     resamples = folds,
#     control = control_resamples(save_pred = TRUE, extract = get_model)
#   )
mars_tune = mars_wrkfl %>%
tune_grid(
resamples = folds,
control = control_resamples(save_pred = TRUE, extract = get_model)
)
tictoc::toc()
mars_tune
mars_tune %>%
collect_metrics()
mars_tune %>%
collect_metrics() %>%
arrang(mean)
mars_tune %>%
collect_metrics() %>%
arrange(mean)
mars_tune %>%
show_best()
mars_wrkfl %>%
parameters()
grid_regular(mars_wrkfl %>%
parameters(), levels = 2)
grid = crossing(
num_terms = c(5, 10, 15, 20),
prod_degree = c(1, 2)
)
grid
doParallel::registerDoParallel()
tictoc::tic()
# mars_train = mars_wrkfl %>%
#   fit_resamples(
#     resamples = folds,
#     control = control_resamples(save_pred = TRUE, extract = get_model)
#   )
mars_tune = mars_wrkfl %>%
tune_grid(
resamples = folds,
grid = grid,
control = control_resamples(save_pred = TRUE, extract = get_model)
)
tictoc::toc()
mars_tune %>%
show_best()
mars_tune
mars_tune %>%
collect_metrics()
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse")
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean))
mars_tune %>%
collect_metrics()
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, group = prod_degree))
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, color = prod_degree))
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, color = as.factor(prod_degree)))
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, color = as.factor(prod_degree))) +
ylim(c(0, NULL))
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, color = as.factor(prod_degree))) +
ylim(0, NULL)
mars_tune %>%
collect_metrics() %>%
filter(.metric == "rmse") %>%
ggplot() +
geom_line(aes(num_terms, mean, color = as.factor(prod_degree))) +
ylim(0, NA)
mars_tune %>%
select_best()
mars_final = mars_tune %>%
select_best()
mars_final
mars_wrkfl %>%
finalize_workflow(mars_final)
mars_wrkfl %>%
finalize_workflow(mars_final) %>%
last_fit(bkshr_split)
mars_fit = mars_wrkfl %>%
finalize_workflow(mars_final) %>%
last_fit(bkshr_split)
mars_fit
mars_fit %>%
collect_metrics()
mars_fit %>%
pull(.predictions)
mars_fit
pull_workflow_fit(mars_fit)$fit
mars_fit
mars_fit %>%
fit(bkshr)
mars_fit = mars_wrkfl %>%
finalize_workflow(mars_final)
mars_fit
mars_wrkfl_final = mars_wrkfl %>%
finalize_workflow(mars_final)
mars_wrkfl_final = mars_wrkfl %>%
finalize_workflow(mars_final)
mars_wrkfl_final
mars_wrkfl_final(bkshr)
fit(mars_wrkfl_final, bkshr)
bkshr
mars_wrkfl_final
mars_tune
mars_final = mars_tune %>%
select_best()
mars_wrkfl_final = mars_wrkfl %>%
finalize_workflow(mars_final)
mars_wrkfl_final
mars_wrkfl_final %>%
fit(bkshr)
getwd()
mars_tune %>%
saveRDS("./rds/20200202_bikeshareDemand_mars_trained")
